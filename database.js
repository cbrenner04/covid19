const { Client } = require('pg');
require('dotenv').config()

let client;
const connectToDB = async () => {
  client = new Client({
    connectionString: process.env.DB_URL,
  });
  await client.connect();
};
const disconnectFromDB = async () => await client.end();

const createStatesDataTableQuery = {
  text: `
    CREATE TABLE states (
      did         integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
      name        char(2),
      date        timestamp,
      positive    integer,
      deaths      integer,
      totaltested integer
    )
  `
};

async function createStatesDataTable() {
  await client.query(createStatesDataTableQuery);
}

const createCountryDataTableQuery = {
  text: `
    CREATE TABLE countries (
      did         integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
      name        varchar(40),
      date        timestamp,
      positive    integer,
      recovered   integer,
      deaths      integer,
      totaltested integer
    )
  `
};

async function createCountriesDataTable() {
  await client.query(createCountryDataTableQuery);
}

const statesColumns = 'name, date, positive, deaths, totaltested';

const insertIntoStatesQuery = (values) => ({
  name: 'insert-into-states',
  text: `
    INSERT INTO states (${statesColumns})
      VALUES ($1, $2, $3, $4, $5);
  `,
  values,
});

async function insertIntoStates(values) {
  await client.query(insertIntoStatesQuery(values));
}

const countriesColumns = 'name, date, positive, recovered, deaths, totaltested';

const insertIntoCountriesQuery = (values) => ({
  name: 'insert-into-countries',
  text: `
    INSERT INTO countries (${countriesColumns})
      VALUES ($1, $2, $3, $4, $5, $6);
  `,
  values,
});

async function insertIntoCountries(values) {
  await client.query(insertIntoCountriesQuery(values));
}

const selectLatestStatesDataQuery = (name) => ({
  name: 'select-latest-states-data',
  text: `
    SELECT
      ${statesColumns}
    FROM
      states
    WHERE
      name=$1
    ORDER BY
      date DESC
    LIMIT 1;
  `,
  values: [name],
});

async function selectLatestStatesData(name) {
  const data = await client.query(selectLatestStatesDataQuery(name));
  return data.rows[0];
}

const selectLatestCountriesDataQuery = (name) => ({
  name: 'select-latest-countries-data',
  text: `
    SELECT
      ${countriesColumns}
    FROM
      countries
    WHERE
      name=$1
    ORDER BY
      date DESC
    LIMIT 1;
  `,
  values: [name],
});

async function selectLatestCountriesData(name) {
  const data = await client.query(selectLatestCountriesDataQuery(name));
  return data.rows[0];
}

const selectAllStatesDataQuery = {
  name: 'select-all-states-data',
  text: `
    SELECT DISTINCT ON (name, date)
      ${statesColumns}
    FROM
      states
    ORDER BY
      name, date ASC;
  `,
}

async function selectAllStatesData() {
  const data = await client.query(selectAllStatesDataQuery);
  return data.rows;
}

const selectAllCountriesDataQuery = {
  name: 'select-all-countries-data',
  text: `
    SELECT DISTINCT ON (name, date)
      ${countriesColumns}
    FROM
      countries
    ORDER BY
      name, date ASC;
  `,
}

async function selectAllCountriesData() {
  const data = await client.query(selectAllCountriesDataQuery);
  return data.rows;
}

module.exports = {
  connectToDB,
  disconnectFromDB,
  createStatesDataTable,
  insertIntoStates,
  createCountriesDataTable,
  insertIntoCountries,
  selectLatestStatesData,
  selectLatestCountriesData,
  selectAllStatesData,
  selectAllCountriesData,
}
